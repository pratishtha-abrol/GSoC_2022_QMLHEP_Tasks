Qubits offer an evident edge over bits, given that they can exist in a superposition of states at any given time, while a bit will be in one of either options. Consequently, quantum computation allows us to carry out computations over all these superpostions in parallel, meaning that tasks can be performed 2^n as fast. However, measurement of the qubit causes it to collapse to one of these superpositions, so calculations have to be done in such a way that does not destroy the qubit. We use entanglement as a method for most quantum algorithms, a unique property of quantum mechanics. Entanglement is also responsible for the realisation of what was yet considered science fiction, teleportation. Although done yet with just a single atom, the feat showcases the tremendous potential of quantum computation. Similarly, quantum computation introduces better methods for secret sharing, cryptography and even offers a speedup for most classical algorithms. 
Quantum Machine Learning has only recently started becoming real and Tensorflow Quantum is one of many steps taken towards research in the field. It may have extreme potential in the quantum field, such as in the task provided, the jet classification of quarks and gluons, but it may not show such drastic improvements for classical machine learning jobs.

Having taken a basic introductory course to Quantum Algorithms, the advantage/speedup it offers over classical algorithms has been extraordinary and only reaffirms my faith in the field. I have read about continous and discrete time random walks, factoring algorithms and the quantum fourier transform, search algorithms and even Hamiltonian Simulations. I am yet to explore quantum complexity theory in depth. 
Regardless, I am new to the idea of Quantum Machine Learning and happy to explore more about it, I hope to, through GSoC, form a strong base in the field and develop it further as time(ironic, since time is relative, specially when we talk about quantum) progresses. Other than that, I am also open to working on quantum random walks and search algorithms.